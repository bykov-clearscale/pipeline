pipeline {
    agent {
        node {
            label 'master'
        }
    }
    stages {
    	stage('packer') {
  			steps {
  				build(job: "${params.packer_job}", parameters: [
  					[$class: 'StringParameterValue', name: 'packer_file', value: "${params.packer_file}" ],
  					[$class: 'StringParameterValue', name: 'vpc_id', value: "${params.vpc_id}" ],
  					[$class: 'StringParameterValue', name: 'subnet_id', value: "${params.subnet_id}" ]
  					])
    			script {
	  				timeout(time: 10, unit: 'MINUTES') {  
	    				input(id: "Deploy Gate", message: "Run terraform ${params.terraform_job}?", ok: 'Terraform')
	  				}
				}
  			}
		}
		stage('terraform') {
  			steps {
  				build(job: "${params.terraform_job}", parameters: [
  					[$class: 'StringParameterValue', name: 'packer_file', value: "${params.terraform_path}" ],
  					[$class: 'StringParameterValue', name: 'vpc_id', value: "${params.env}" ],
  					[$class: 'StringParameterValue', name: 'subnet_id', value: "${params.project_name}" ]
  					])  
    			script {
	  				timeout(time: 10, unit: 'MINUTES') {  
	    				input(id: "Deploy Gate", message: "Run ansible job ${params.ansible_job}?", ok: 'Ansible')
	  				}
				}
  			}
		}
		stage('ansible') {
  			steps {
  				build(job: "${params.ansible_job}", parameters: [
  					[$class: 'StringParameterValue', name: 'ssh_key', value: "${params.ssh_key}" ],
  					[$class: 'StringParameterValue', name: 'username', value: "${params.ansible_username}" ],
  					[$class: 'StringParameterValue', name: 'playbook', value: "${params.playbook}" ]
  					])  
  			}
		}
    }
}
